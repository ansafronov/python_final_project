from random import randint


def log(string=None):
    """–î–µ–∫–æ—Ä–∞—Ç–æ—Ä –¥–ª—è –º–µ—Ç–æ–¥–æ–≤ –ø—Ä–æ—Ü–µ—Å—Å–∞ –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è –∏ –¥–æ—Å—Ç–∞–≤–∫–∏"""
    def _decorator(fn):
        def wrapper(*args, **kwargs):
            action_time = randint(1, 20)
            if string is not None:
                return string.format(action_time)
            return '{} - {}—Å!'.format(fn.__name__, action_time)

        return wrapper

    return _decorator


@log('üë®‚Äçüç≥ –ü—Ä–∏–≥–æ—Ç–æ–≤–∏–ª–∏ –∑–∞ {}—Å!')
def bake():
    """–ì–æ—Ç–æ–≤–∏—Ç –ø–∏—Ü—Ü—É"""


@log('üõµ –î–æ—Å—Ç–∞–≤–∏–ª–∏ –∑–∞ {}—Å!')
def delivery():
    """–î–æ—Å—Ç–∞–≤–ª—è–µ—Ç –ø–∏—Ü—Ü—É"""
    pass


@log('üè† –ó–∞–±—Ä–∞–ª–∏ –∑–∞ {}—Å!')
def pickup():
    """–°–∞–º–æ–≤—ã–≤–æ–∑"""
    pass


if __name__ == '__main__':
    pizza = 'Pizza'  # do not use exemplar due to circular imports
    print(bake(pizza))
    print(delivery(pizza))
    print(pickup(delivery))
